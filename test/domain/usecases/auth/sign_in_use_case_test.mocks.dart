// Mocks generated by Mockito 5.4.6 from annotations
// in workshop_booking_system/test/domain/usecases/auth/sign_in_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:workshop_booking_system/core/error/result.dart' as _i5;
import 'package:workshop_booking_system/domain/entities/user.dart' as _i4;
import 'package:workshop_booking_system/domain/repositories/auth_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i2.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i4.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i3.Stream<_i4.User?>.empty(),
          )
          as _i3.Stream<_i4.User?>);

  @override
  _i3.Future<_i4.User?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i3.Future<_i4.User?>.value(),
          )
          as _i3.Future<_i4.User?>);

  @override
  _i3.Future<_i5.Result<_i4.User>> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i3.Future<_i5.Result<_i4.User>>.value(
              _i6.dummyValue<_i5.Result<_i4.User>>(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
          )
          as _i3.Future<_i5.Result<_i4.User>>);

  @override
  _i3.Future<_i5.Result<_i4.User>> signUp(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password, name]),
            returnValue: _i3.Future<_i5.Result<_i4.User>>.value(
              _i6.dummyValue<_i5.Result<_i4.User>>(
                this,
                Invocation.method(#signUp, [email, password, name]),
              ),
            ),
          )
          as _i3.Future<_i5.Result<_i4.User>>);

  @override
  _i3.Future<_i5.Result<void>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<_i5.Result<void>>.value(
              _i6.dummyValue<_i5.Result<void>>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i3.Future<_i5.Result<void>>);

  @override
  _i3.Future<_i5.Result<void>> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i3.Future<_i5.Result<void>>.value(
              _i6.dummyValue<_i5.Result<void>>(
                this,
                Invocation.method(#sendPasswordResetEmail, [email]),
              ),
            ),
          )
          as _i3.Future<_i5.Result<void>>);

  @override
  _i3.Future<_i5.Result<_i4.User>> updateProfile(_i4.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [user]),
            returnValue: _i3.Future<_i5.Result<_i4.User>>.value(
              _i6.dummyValue<_i5.Result<_i4.User>>(
                this,
                Invocation.method(#updateProfile, [user]),
              ),
            ),
          )
          as _i3.Future<_i5.Result<_i4.User>>);

  @override
  _i3.Future<_i5.Result<void>> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i3.Future<_i5.Result<void>>.value(
              _i6.dummyValue<_i5.Result<void>>(
                this,
                Invocation.method(#deleteAccount, []),
              ),
            ),
          )
          as _i3.Future<_i5.Result<void>>);

  @override
  _i3.Future<_i5.Result<List<_i4.User>>> getAllUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, []),
            returnValue: _i3.Future<_i5.Result<List<_i4.User>>>.value(
              _i6.dummyValue<_i5.Result<List<_i4.User>>>(
                this,
                Invocation.method(#getAllUsers, []),
              ),
            ),
          )
          as _i3.Future<_i5.Result<List<_i4.User>>>);

  @override
  _i3.Future<_i5.Result<_i4.User>> updateUserRole(
    String? userId,
    _i4.UserRole? role,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserRole, [userId, role]),
            returnValue: _i3.Future<_i5.Result<_i4.User>>.value(
              _i6.dummyValue<_i5.Result<_i4.User>>(
                this,
                Invocation.method(#updateUserRole, [userId, role]),
              ),
            ),
          )
          as _i3.Future<_i5.Result<_i4.User>>);
}
