// Mocks generated by Mockito 5.4.6 from annotations
// in workshop_booking_system/test/domain/usecases/booking/create_booking_use_case_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i6;
import 'package:workshop_booking_system/core/error/result.dart' as _i4;
import 'package:workshop_booking_system/domain/entities/booking.dart' as _i5;
import 'package:workshop_booking_system/domain/entities/payment_info.dart'
    as _i8;
import 'package:workshop_booking_system/domain/entities/time_slot.dart' as _i7;
import 'package:workshop_booking_system/domain/entities/user.dart' as _i10;
import 'package:workshop_booking_system/domain/repositories/auth_repository.dart'
    as _i9;
import 'package:workshop_booking_system/domain/repositories/booking_repository.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [BookingRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockBookingRepository extends _i1.Mock implements _i2.BookingRepository {
  MockBookingRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i4.Result<_i5.Booking>> createBooking(_i5.Booking? booking) =>
      (super.noSuchMethod(
            Invocation.method(#createBooking, [booking]),
            returnValue: _i3.Future<_i4.Result<_i5.Booking>>.value(
              _i6.dummyValue<_i4.Result<_i5.Booking>>(
                this,
                Invocation.method(#createBooking, [booking]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Booking>>);

  @override
  _i3.Future<_i4.Result<_i5.Booking>> getBookingById(String? id) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingById, [id]),
            returnValue: _i3.Future<_i4.Result<_i5.Booking>>.value(
              _i6.dummyValue<_i4.Result<_i5.Booking>>(
                this,
                Invocation.method(#getBookingById, [id]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Booking>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Booking>>> getBookingsByUser(String? userId) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsByUser, [userId]),
            returnValue: _i3.Future<_i4.Result<List<_i5.Booking>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Booking>>>(
                this,
                Invocation.method(#getBookingsByUser, [userId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Booking>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Booking>>> getBookingsByTimeSlot(
    String? timeSlotId,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsByTimeSlot, [timeSlotId]),
            returnValue: _i3.Future<_i4.Result<List<_i5.Booking>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Booking>>>(
                this,
                Invocation.method(#getBookingsByTimeSlot, [timeSlotId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Booking>>>);

  @override
  _i3.Future<_i4.Result<_i5.Booking>> updateBookingStatus(
    String? bookingId,
    _i5.BookingStatus? status,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateBookingStatus, [bookingId, status]),
            returnValue: _i3.Future<_i4.Result<_i5.Booking>>.value(
              _i6.dummyValue<_i4.Result<_i5.Booking>>(
                this,
                Invocation.method(#updateBookingStatus, [bookingId, status]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Booking>>);

  @override
  _i3.Future<_i4.Result<_i5.Booking>> cancelBooking(
    String? bookingId,
    String? reason,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#cancelBooking, [bookingId, reason]),
            returnValue: _i3.Future<_i4.Result<_i5.Booking>>.value(
              _i6.dummyValue<_i4.Result<_i5.Booking>>(
                this,
                Invocation.method(#cancelBooking, [bookingId, reason]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i5.Booking>>);

  @override
  _i3.Future<_i4.Result<List<_i7.TimeSlot>>> getAvailableTimeSlots(
    String? itemId,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getAvailableTimeSlots, [
              itemId,
              startDate,
              endDate,
            ]),
            returnValue: _i3.Future<_i4.Result<List<_i7.TimeSlot>>>.value(
              _i6.dummyValue<_i4.Result<List<_i7.TimeSlot>>>(
                this,
                Invocation.method(#getAvailableTimeSlots, [
                  itemId,
                  startDate,
                  endDate,
                ]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i7.TimeSlot>>>);

  @override
  _i3.Future<_i4.Result<_i7.TimeSlot>> createTimeSlot(_i7.TimeSlot? timeSlot) =>
      (super.noSuchMethod(
            Invocation.method(#createTimeSlot, [timeSlot]),
            returnValue: _i3.Future<_i4.Result<_i7.TimeSlot>>.value(
              _i6.dummyValue<_i4.Result<_i7.TimeSlot>>(
                this,
                Invocation.method(#createTimeSlot, [timeSlot]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.TimeSlot>>);

  @override
  _i3.Future<_i4.Result<_i7.TimeSlot>> updateTimeSlot(_i7.TimeSlot? timeSlot) =>
      (super.noSuchMethod(
            Invocation.method(#updateTimeSlot, [timeSlot]),
            returnValue: _i3.Future<_i4.Result<_i7.TimeSlot>>.value(
              _i6.dummyValue<_i4.Result<_i7.TimeSlot>>(
                this,
                Invocation.method(#updateTimeSlot, [timeSlot]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i7.TimeSlot>>);

  @override
  _i3.Future<_i4.Result<void>> deleteTimeSlot(String? timeSlotId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteTimeSlot, [timeSlotId]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteTimeSlot, [timeSlotId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i8.PaymentInfo>> processPayment(
    _i8.PaymentInfo? paymentInfo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processPayment, [paymentInfo]),
            returnValue: _i3.Future<_i4.Result<_i8.PaymentInfo>>.value(
              _i6.dummyValue<_i4.Result<_i8.PaymentInfo>>(
                this,
                Invocation.method(#processPayment, [paymentInfo]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i8.PaymentInfo>>);

  @override
  _i3.Future<_i4.Result<_i8.PaymentInfo>> getPaymentInfo(String? paymentId) =>
      (super.noSuchMethod(
            Invocation.method(#getPaymentInfo, [paymentId]),
            returnValue: _i3.Future<_i4.Result<_i8.PaymentInfo>>.value(
              _i6.dummyValue<_i4.Result<_i8.PaymentInfo>>(
                this,
                Invocation.method(#getPaymentInfo, [paymentId]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i8.PaymentInfo>>);

  @override
  _i3.Future<_i4.Result<_i8.PaymentInfo>> processRefund(
    String? paymentId,
    double? amount,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#processRefund, [paymentId, amount]),
            returnValue: _i3.Future<_i4.Result<_i8.PaymentInfo>>.value(
              _i6.dummyValue<_i4.Result<_i8.PaymentInfo>>(
                this,
                Invocation.method(#processRefund, [paymentId, amount]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i8.PaymentInfo>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Booking>>> getBookingsByDateRange(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getBookingsByDateRange, [startDate, endDate]),
            returnValue: _i3.Future<_i4.Result<List<_i5.Booking>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Booking>>>(
                this,
                Invocation.method(#getBookingsByDateRange, [
                  startDate,
                  endDate,
                ]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Booking>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Booking>>> getRecentBookings({
    int? limit = 10,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getRecentBookings, [], {#limit: limit}),
            returnValue: _i3.Future<_i4.Result<List<_i5.Booking>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Booking>>>(
                this,
                Invocation.method(#getRecentBookings, [], {#limit: limit}),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Booking>>>);

  @override
  _i3.Future<_i4.Result<List<_i5.Booking>>> getAllBookings() =>
      (super.noSuchMethod(
            Invocation.method(#getAllBookings, []),
            returnValue: _i3.Future<_i4.Result<List<_i5.Booking>>>.value(
              _i6.dummyValue<_i4.Result<List<_i5.Booking>>>(
                this,
                Invocation.method(#getAllBookings, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i5.Booking>>>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i9.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<_i10.User?> get authStateChanges =>
      (super.noSuchMethod(
            Invocation.getter(#authStateChanges),
            returnValue: _i3.Stream<_i10.User?>.empty(),
          )
          as _i3.Stream<_i10.User?>);

  @override
  _i3.Future<_i10.User?> getCurrentUser() =>
      (super.noSuchMethod(
            Invocation.method(#getCurrentUser, []),
            returnValue: _i3.Future<_i10.User?>.value(),
          )
          as _i3.Future<_i10.User?>);

  @override
  _i3.Future<_i4.Result<_i10.User>> signIn(String? email, String? password) =>
      (super.noSuchMethod(
            Invocation.method(#signIn, [email, password]),
            returnValue: _i3.Future<_i4.Result<_i10.User>>.value(
              _i6.dummyValue<_i4.Result<_i10.User>>(
                this,
                Invocation.method(#signIn, [email, password]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i10.User>>);

  @override
  _i3.Future<_i4.Result<_i10.User>> signUp(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#signUp, [email, password, name]),
            returnValue: _i3.Future<_i4.Result<_i10.User>>.value(
              _i6.dummyValue<_i4.Result<_i10.User>>(
                this,
                Invocation.method(#signUp, [email, password, name]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i10.User>>);

  @override
  _i3.Future<_i4.Result<void>> signOut() =>
      (super.noSuchMethod(
            Invocation.method(#signOut, []),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#signOut, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<void>> sendPasswordResetEmail(String? email) =>
      (super.noSuchMethod(
            Invocation.method(#sendPasswordResetEmail, [email]),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#sendPasswordResetEmail, [email]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<_i10.User>> updateProfile(_i10.User? user) =>
      (super.noSuchMethod(
            Invocation.method(#updateProfile, [user]),
            returnValue: _i3.Future<_i4.Result<_i10.User>>.value(
              _i6.dummyValue<_i4.Result<_i10.User>>(
                this,
                Invocation.method(#updateProfile, [user]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i10.User>>);

  @override
  _i3.Future<_i4.Result<void>> deleteAccount() =>
      (super.noSuchMethod(
            Invocation.method(#deleteAccount, []),
            returnValue: _i3.Future<_i4.Result<void>>.value(
              _i6.dummyValue<_i4.Result<void>>(
                this,
                Invocation.method(#deleteAccount, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<void>>);

  @override
  _i3.Future<_i4.Result<List<_i10.User>>> getAllUsers() =>
      (super.noSuchMethod(
            Invocation.method(#getAllUsers, []),
            returnValue: _i3.Future<_i4.Result<List<_i10.User>>>.value(
              _i6.dummyValue<_i4.Result<List<_i10.User>>>(
                this,
                Invocation.method(#getAllUsers, []),
              ),
            ),
          )
          as _i3.Future<_i4.Result<List<_i10.User>>>);

  @override
  _i3.Future<_i4.Result<_i10.User>> updateUserRole(
    String? userId,
    _i10.UserRole? role,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateUserRole, [userId, role]),
            returnValue: _i3.Future<_i4.Result<_i10.User>>.value(
              _i6.dummyValue<_i4.Result<_i10.User>>(
                this,
                Invocation.method(#updateUserRole, [userId, role]),
              ),
            ),
          )
          as _i3.Future<_i4.Result<_i10.User>>);
}
